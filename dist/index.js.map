{"version":3,"sources":["../src/index.ts"],"sourcesContent":["export default function keyCombo(s: string, e: KeyboardEvent) {\n\tconst keyCombo = parseKeyComboEvent(e)\n\tconst expectedKeyCombo = parseKeyComboString(s)\n\treturn deepEqual(keyCombo, expectedKeyCombo)\n}\n\ntype Modifier = \"ctrl\" | \"shift\" | \"alt\" | \"meta\"\n\ntype KeyCombo = {\n\tcontentKey: string\n\tmodifierKeys: Array<Modifier>\n}\n\nfunction parseKeyComboEvent(e: KeyboardEvent): KeyCombo {\n\tconst modifierKeys: Array<Modifier> = []\n\tif (e.ctrlKey) {\n\t\tmodifierKeys.push(\"ctrl\")\n\t}\n\tif (e.shiftKey) {\n\t\tmodifierKeys.push(\"shift\")\n\t}\n\tif (e.altKey) {\n\t\tmodifierKeys.push(\"alt\")\n\t}\n\tif (e.metaKey) {\n\t\tmodifierKeys.push(\"meta\")\n\t}\n\tconst contentKey = contentKeyMapper(e.code)\n\treturn { contentKey, modifierKeys }\n}\n\nfunction contentKeyMapper(code: string): string {\n\tif (code.split(\" \").length > 1) {\n\t\tthrow new Error(\"Invalid code\")\n\t}\n\tcode = code.toLowerCase()\n\tswitch (code) {\n\t\tcase \"keyq\":\n\t\tcase \"q\":\n\t\t\treturn \"q\"\n\t\tcase \"keyw\":\n\t\tcase \"w\":\n\t\t\treturn \"w\"\n\t\tcase \"keye\":\n\t\tcase \"e\":\n\t\t\treturn \"e\"\n\t\tcase \"keyr\":\n\t\tcase \"r\":\n\t\t\treturn \"r\"\n\t\tcase \"keyt\":\n\t\tcase \"t\":\n\t\t\treturn \"t\"\n\t\tcase \"keyy\":\n\t\tcase \"y\":\n\t\t\treturn \"y\"\n\t\tcase \"keyu\":\n\t\tcase \"u\":\n\t\t\treturn \"u\"\n\t\tcase \"keyi\":\n\t\tcase \"i\":\n\t\t\treturn \"i\"\n\t\tcase \"keyo\":\n\t\tcase \"o\":\n\t\t\treturn \"o\"\n\t\tcase \"keyp\":\n\t\tcase \"p\":\n\t\t\treturn \"p\"\n\t\tcase \"keya\":\n\t\tcase \"a\":\n\t\t\treturn \"a\"\n\t\tcase \"keys\":\n\t\tcase \"s\":\n\t\t\treturn \"s\"\n\t\tcase \"keyd\":\n\t\tcase \"d\":\n\t\t\treturn \"d\"\n\t\tcase \"keyf\":\n\t\tcase \"f\":\n\t\t\treturn \"f\"\n\t\tcase \"keyg\":\n\t\tcase \"g\":\n\t\t\treturn \"g\"\n\t\tcase \"keyh\":\n\t\tcase \"h\":\n\t\t\treturn \"h\"\n\t\tcase \"keyj\":\n\t\tcase \"j\":\n\t\t\treturn \"j\"\n\t\tcase \"keyk\":\n\t\tcase \"k\":\n\t\t\treturn \"k\"\n\t\tcase \"keyl\":\n\t\tcase \"l\":\n\t\t\treturn \"l\"\n\t\tcase \"keyz\":\n\t\tcase \"z\":\n\t\t\treturn \"z\"\n\t\tcase \"keyx\":\n\t\tcase \"x\":\n\t\t\treturn \"x\"\n\t\tcase \"keyc\":\n\t\tcase \"c\":\n\t\t\treturn \"c\"\n\t\tcase \"keyv\":\n\t\tcase \"v\":\n\t\t\treturn \"v\"\n\t\tcase \"keyb\":\n\t\tcase \"b\":\n\t\t\treturn \"b\"\n\t\tcase \"keyn\":\n\t\tcase \"n\":\n\t\t\treturn \"n\"\n\t\tcase \"keym\":\n\t\tcase \"m\":\n\t\t\treturn \"m\"\n\t\tcase \"digit0\":\n\t\tcase \"0\":\n\t\tcase \")\":\n\t\t\treturn \"0\"\n\t\tcase \"digit1\":\n\t\tcase \"1\":\n\t\tcase \"!\":\n\t\t\treturn \"1\"\n\t\tcase \"digit2\":\n\t\tcase \"2\":\n\t\tcase \"@\":\n\t\t\treturn \"2\"\n\t\tcase \"digit3\":\n\t\tcase \"3\":\n\t\tcase \"#\":\n\t\t\treturn \"3\"\n\t\tcase \"digit4\":\n\t\tcase \"4\":\n\t\tcase \"$\":\n\t\t\treturn \"4\"\n\t\tcase \"digit5\":\n\t\tcase \"5\":\n\t\tcase \"%\":\n\t\t\treturn \"5\"\n\t\tcase \"digit6\":\n\t\tcase \"6\":\n\t\tcase \"^\":\n\t\t\treturn \"6\"\n\t\tcase \"digit7\":\n\t\tcase \"7\":\n\t\tcase \"&\":\n\t\t\treturn \"7\"\n\t\tcase \"digit8\":\n\t\tcase \"8\":\n\t\tcase \"*\":\n\t\t\treturn \"8\"\n\t\tcase \"digit9\":\n\t\tcase \"9\":\n\t\tcase \"(\":\n\t\t\treturn \"9\"\n\t\tcase \"bracketleft\":\n\t\tcase \"{\":\n\t\t\treturn \"[\"\n\t\tcase \"bracketright\":\n\t\tcase \"}\":\n\t\t\treturn \"]\"\n\t\tcase \"minus\":\n\t\tcase \"_\":\n\t\t\treturn \"-\"\n\t\tcase \"equal\":\n\t\tcase \"+\":\n\t\t\treturn \"=\"\n\t\tcase \"semicolon\":\n\t\tcase \":\":\n\t\t\treturn \";\"\n\t\tcase \"comma\":\n\t\tcase \"<\":\n\t\t\treturn \",\"\n\t\tcase \"period\":\n\t\tcase \">\":\n\t\t\treturn \".\"\n\t\tcase \"quote\":\n\t\tcase '\"':\n\t\t\treturn \"'\"\n\t\tcase \"backquote\":\n\t\tcase \"~\":\n\t\t\treturn \"`\"\n\t\tcase \"backslash\":\n\t\tcase \"|\":\n\t\t\treturn \"\\\\\"\n\t\tcase \"slash\":\n\t\tcase \"?\":\n\t\t\treturn \"/\"\n\t\tcase \"space\":\n\t\tcase \"␣\":\n\t\t\treturn \"space\"\n\t\tcase \"tab\":\n\t\tcase \"⇥\":\n\t\t\treturn \"tab\"\n\t\tcase \"escape\":\n\t\tcase \"esc\":\n\t\t\treturn \"esc\"\n\t\tcase \"backspace\":\n\t\tcase \"⌫\":\n\t\tcase \"delete\":\n\t\tcase \"del\":\n\t\t\treturn \"del\"\n\t\tcase \"enter\":\n\t\tcase \"return\":\n\t\tcase \"⏎\":\n\t\tcase \"↵\":\n\t\tcase \"↩\":\n\t\t\treturn \"enter\"\n\t\tcase \"arrowup\":\n\t\tcase \"↑\":\n\t\tcase \"up\":\n\t\t\treturn \"up\"\n\t\tcase \"arrowdown\":\n\t\tcase \"↓\":\n\t\tcase \"down\":\n\t\t\treturn \"down\"\n\t\tcase \"arrowleft\":\n\t\tcase \"←\":\n\t\tcase \"left\":\n\t\t\treturn \"left\"\n\t\tcase \"arrowright\":\n\t\tcase \"→\":\n\t\tcase \"right\":\n\t\t\treturn \"right\"\n\t\tcase \"capslock\":\n\t\tcase \"caps\":\n\t\tcase \"cap\":\n\t\tcase \"⇪\":\n\t\t\treturn \"cap\"\n\t\tdefault:\n\t\t\treturn \"unknown\"\n\t}\n}\n\nfunction parseKeyComboString(s: string): KeyCombo {\n\ts = s.toLowerCase()\n\n\tif (s.indexOf(\"+\") !== -1) {\n\t\tconst parts = s.split(\"+\")\n\t\tconst modifierKeys = extractModifiers(parts[0])\n\t\tconst contentKey = contentKeyMapper(parts[1].trim())\n\t\treturn { contentKey, modifierKeys }\n\t}\n\n\tif (allModifiers.every(m => s.indexOf(m) === -1)) {\n\t\t// No modifiers\n\t\treturn { contentKey: contentKeyMapper(s), modifierKeys: [] }\n\t} else {\n\t\t// Only modifiers\n\t\tconst modifierKeys = extractModifiers(s)\n\t\treturn { contentKey: \"\", modifierKeys }\n\t}\n}\n\nfunction extractModifiers(s: string): Array<Modifier> {\n\treturn s\n\t\t.split(\" \")\n\t\t.filter(p => p !== \"\")\n\t\t.map(modifier => {\n\t\t\tswitch (modifier) {\n\t\t\t\tcase \"ctrl\":\n\t\t\t\tcase \"control\":\n\t\t\t\tcase \"⌃\":\n\t\t\t\t\treturn \"ctrl\"\n\t\t\t\tcase \"shift\":\n\t\t\t\tcase \"⇧\":\n\t\t\t\t\treturn \"shift\"\n\t\t\t\tcase \"alt\":\n\t\t\t\tcase \"option\":\n\t\t\t\tcase \"⌥\":\n\t\t\t\t\treturn \"alt\"\n\t\t\t\tcase \"cmd\":\n\t\t\t\tcase \"command\":\n\t\t\t\tcase \"meta\":\n\t\t\t\tcase \"⌘\":\n\t\t\t\t\treturn \"meta\"\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unknown modifier: ${modifier}`)\n\t\t\t}\n\t\t})\n}\n\nconst allModifiers = [\"ctrl\", \"control\", \"⌃\", \"shift\", \"⇧\", \"alt\", \"option\", \"⌥\", \"cmd\", \"command\", \"meta\", \"⌘\"]\n\nfunction deepEqual(a: KeyCombo, b: KeyCombo): boolean {\n\treturn a.contentKey === b.contentKey && deepEqualArray(a.modifierKeys, b.modifierKeys)\n}\n\nfunction deepEqualArray(a: Array<Modifier>, b: Array<Modifier>): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\ta = a.sort()\n\tb = b.sort()\n\tfor (let i = 0; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\n// console.log(keyCombo(\"⇧ ⌃ ⌥ meta + Q\", { ctrlKey: true, shiftKey: true, altKey: true, metaKey: false, code: \"KeyQ\" } as KeyboardEvent))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAe,SAAR,SAA0B,GAAW,GAAkB;AAC7D,QAAMA,YAAW,mBAAmB,CAAC;AACrC,QAAM,mBAAmB,oBAAoB,CAAC;AAC9C,SAAO,UAAUA,WAAU,gBAAgB;AAC5C;AASA,SAAS,mBAAmB,GAA4B;AACvD,QAAM,eAAgC,CAAC;AACvC,MAAI,EAAE,SAAS;AACd,iBAAa,KAAK,MAAM;AAAA,EACzB;AACA,MAAI,EAAE,UAAU;AACf,iBAAa,KAAK,OAAO;AAAA,EAC1B;AACA,MAAI,EAAE,QAAQ;AACb,iBAAa,KAAK,KAAK;AAAA,EACxB;AACA,MAAI,EAAE,SAAS;AACd,iBAAa,KAAK,MAAM;AAAA,EACzB;AACA,QAAM,aAAa,iBAAiB,EAAE,IAAI;AAC1C,SAAO,EAAE,YAAY,aAAa;AACnC;AAEA,SAAS,iBAAiB,MAAsB;AAC/C,MAAI,KAAK,MAAM,GAAG,EAAE,SAAS,GAAG;AAC/B,UAAM,IAAI,MAAM,cAAc;AAAA,EAC/B;AACA,SAAO,KAAK,YAAY;AACxB,UAAQ,MAAM;AAAA,IACb,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AAAA,IACL,KAAK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","names":["keyCombo"]}